<?php

/**
 * Implementation of hook_install()
 */
function tzstats_install() {
  drupal_install_schema('tzstats');
}

/**
 * Implementation of hook_uninstall()
 */
function tzstats_uninstall() {
  drupal_uninstall_schema('tzstats');
}

function tzstats_update_6000() {
  $ret = array();

  $schema['tzstats_sync'] = array(
      'description' => t('Stores statistics on synchronized users'),
      'fields' => array(
        'id' => array(
          'type' => 'serial',
          'not null' => TRUE,
          'unsigned' => TRUE,
        ),
        'module' => array(
          'type' => 'varchar',
          'length' => '128',
          'not null' => TRUE,
          'default' => '',
        ),
        'count' => array(
          'type' => 'int',
          'not null' => TRUE,
        ),
        'successful' => array(
          'type' => 'int',
          'not null' => TRUE,
        ),
        'seconds' => array(
          'type' => 'float',
          'unsigned' => TRUE,
          'not null' => TRUE,
        ),
      ),
      'primary key' => array('id'),
    );
  db_create_table($ret, 'tzstats_sync', $schema['tzstats_sync']);

  return $ret;
}

function tzstats_update_6001() {
  $ret = array();
  db_add_field($ret, 'tzstats_sync', 'timestamp',
    array(
        'type' => 'int',
        'not null' => TRUE,
    )
  );
  return $ret;
}

function tzstats_update_6002() {
  $ret = array();
  db_create_table($ret, 'tzstats_sms_temp', array(
    'description' => t('Stores statistics on sent SMS messages'),
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'unsigned' => TRUE,
      ),
      'uid' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => "Sending user's {users}.uid.",
      ),
      'timestamp' => array(
        'type' => 'int',
        'not null' => TRUE,
        'description' => "Timestamp when this SMS was sent",
      ),
      'sms_type' => array(
        'type' => 'int',
        'not null' => TRUE,
        'description' => 'SMS type as defined by the tzsms module',
      ),
      'length' => array(
        'type' => 'int',
        'default' => 0,
        'description' => 'SMS length in characters',
      ),
      'destination' => array(
        'type' => 'varchar',
        'length' => '32',
        'not null' => TRUE,
        'default' => '',
        'description' => 'SMS destination phone number',
      ),
    ),
    'primary key' => array('id'),
  ));
  db_query('INSERT IGNORE INTO {tzstats_sms_temp} (uid, timestamp, sms_type, destination) SELECT uid, timestamp, sms_type, destination FROM {tzstats_sms}');
  db_drop_table($ret, 'tzstats_sms');
  db_rename_table($ret, 'tzstats_sms_temp', 'tzstats_sms');
  return $ret;
}

function tzstats_update_6003() {
  /* Keep track of user status */
  $ret = array();
  db_create_table($ret, 'tzstats_user',  array(
    'description' => t('Stores statistics on user status'),
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'unsigned' => TRUE,
      ),
      'uid' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => "{users}.uid.",
      ),
      'timestamp' => array(
        'type' => 'int',
        'not null' => TRUE,
        'description' => "Timestamp for change",
      ),
      'status' => array(
        'type' => 'int',
        'not null' => TRUE,
        'description' => 'Status value',
      ),
    ),
    'primary key' => array('id'),
  ));
  return $ret;
}

function tzstats_update_6004() {
  /* Keep track of incoming time reports */
  $ret = array();
  db_create_table($ret, 'tzstats_report',  array(
    'description' => t('Stores statistics on incoming time reports'),
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'unsigned' => TRUE,
      ),
      'uid' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => "{users}.uid.",
      ),
      'timestamp' => array(
        'type' => 'int',
        'not null' => TRUE,
        'description' => "Timestamp for change",
      ),
      'vid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => '{node_revision}.vid for the report',
      ),
    ),
    'primary key' => array('id'),
  ));
  return $ret;
}

function tzstats_update_6005() {
  /* Keep track of user logins */
  $ret = array();
  db_create_table($ret, 'tzstats_login',  array(
    'description' => t('Stores statistics on user logins'),
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'unsigned' => TRUE,
      ),
      'uid' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => "{users}.uid.",
      ),
      'timestamp' => array(
        'type' => 'int',
        'not null' => TRUE,
        'description' => "Timestamp for login",
      ),
    ),
    'primary key' => array('id'),
  ));
  return $ret;
}

function tzstats_update_6006() {
  $ret = array();
  db_add_index($ret, 'tzstats_user', 'uid', array('uid'));
  return $ret;
}

function tzstats_update_6007() {
/* Keep track of failed user logins */
  $ret = array();
  db_create_table($ret, 'tzstats_failed_login',  array(
    'description' => t('Stores statistics on failed user logins'),
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'unsigned' => TRUE,
      ),
      'name' => array(
        'type' => 'varchar',
        'length' => 60,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Attempted username',
      ),
      'user_agent' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'description' => 'User agent',
      ),
      'timestamp' => array(
        'type' => 'int',
        'not null' => TRUE,
        'description' => "Timestamp for attempted login",
      ),
    ),
    'primary key' => array('id'),
  ));
  return $ret;
}

/**
 * TZStats database schema
 */
function tzstats_schema() {
  /* SMS schema keeps track of sent SMS messages */
  $schema['tzstats_sms'] = array(
    'description' => t('Stores statistics on sent SMS messages'),
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'unsigned' => TRUE,
      ),
      'uid' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => "Sending user's {users}.uid.",
      ),
      'timestamp' => array(
        'type' => 'int',
        'not null' => TRUE,
        'description' => "Timestamp when this SMS was sent",
      ),
      'sms_type' => array(
        'type' => 'int',
        'not null' => TRUE,
        'description' => 'SMS type as defined by the tzsms module',
      ),
      'length' => array(
        'type' => 'int',
        'default' => 0,
        'description' => 'SMS length in characters',
      ),
      'destination' => array(
        'type' => 'varchar',
        'length' => '32',
        'not null' => TRUE,
        'default' => '',
        'description' => 'SMS destination phone number',
      ),
    ),
    'primary key' => array('id'),
  );

  $schema['tzstats_sync'] = array(
    'description' => t('Stores statistics on synchronized users'),
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'unsigned' => TRUE,
      ),
      'module' => array(
        'type' => 'varchar',
        'length' => '128',
        'not null' => TRUE,
        'default' => '',
      ),
      'count' => array(
        'type' => 'int',
        'not null' => TRUE,
      ),
      'successful' => array(
        'type' => 'int',
        'not null' => TRUE,
      ),
      'seconds' => array(
        'type' => 'float',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'timestamp' => array(
        'type' => 'int',
        'not null' => TRUE,
        'description' => "Timestamp when synchronization was completed",
      ),
    ),
    'primary key' => array('id'),
  );

  /* Keep track of user status */
  $schema['tzstats_user'] = array(
    'description' => t('Stores statistics on user status'),
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'unsigned' => TRUE,
      ),
      'uid' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => "{users}.uid.",
      ),
      'timestamp' => array(
        'type' => 'int',
        'not null' => TRUE,
        'description' => "Timestamp for change",
      ),
      'status' => array(
        'type' => 'int',
        'not null' => TRUE,
        'description' => 'Status value',
      ),
    ),
    'primary key' => array('id'),
    'indexes' => array(
      'uid' => array('uid'),
    ),
  );

  $schema['tzstats_report'] = array(
    'description' => t('Stores statistics on incoming time reports'),
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'unsigned' => TRUE,
      ),
      'uid' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => "{users}.uid.",
      ),
      'timestamp' => array(
        'type' => 'int',
        'not null' => TRUE,
        'description' => "Timestamp for change",
      ),
      'vid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => '{node_revision}.vid for the report',
      ),
    ),
    'primary key' => array('id'),
  );

  $schema['tzstats_login'] = array(
    'description' => t('Stores statistics on user logins'),
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'unsigned' => TRUE,
      ),
      'uid' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => "{users}.uid.",
      ),
      'timestamp' => array(
        'type' => 'int',
        'not null' => TRUE,
        'description' => "Timestamp for login",
      ),
    ),
    'primary key' => array('id'),
  );

  $schema['tzstats_failed_login'] = array(
    'description' => t('Stores statistics on failed user logins'),
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'unsigned' => TRUE,
      ),
      'name' => array(
        'type' => 'varchar',
        'length' => 60,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Attempted username',
      ),
      'user_agent' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'description' => 'User agent',
      ),
      'timestamp' => array(
        'type' => 'int',
        'not null' => TRUE,
        'description' => "Timestamp for attempted login",
      ),
    ),
    'primary key' => array('id'),
  );

  return $schema;
}