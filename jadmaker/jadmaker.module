<?php
/**
 * @file Service for generating proper jad files
 */

/**
 * Implementation of hook_help().
 */
function jadmaker_help($path, $arg) {
  switch ($path) {
    case 'admin/help#jadmaker':
    case 'admin/modules#description':
      return t('Generates jad files while taking the visiting mobile phone to account. Requires browscap.');
  }
}

/**
 * Implementation of hook_menu
 */
function jadmaker_menu() {

  $items = array();

  //this is added for this current tutorial.
  $items['tz.jad'] = array(
    'title' => 'Jad Maker',
    'page callback' => 'jadmaker_create_jad',
    'access callback' => TRUE,
    'file' => 'jadmaker.inc',
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implementation of hook_init
 * Disables caching for this page
 * @return unknown_type
 */
function jadmaker_init() {
  // We don't want caching for this module
  if (drupal_match_path($_GET['q'],'tz.jad')) {
    $GLOBALS['conf']['cache'] = FALSE;
  }
}

/**
 * Implementation of hook_views_api.
 * The rest of the hooks are in jadmaker.views.inc
 */
function jadmaker_views_api() {
  return array(
    'api' => 2,
    'path' => drupal_get_path('module', 'jadmaker'),
  );
}

/**
 * Implementation of hook_date_api_fields().
 *
 * Registers the timestamp field so the date can be used by
 * the Date API views date argument and date filter.
 */
function jadmaker_date_api_fields($field) {
  if($field == 'jadmaker.timestamp') {
    return array(
      // The type of date: DATE_UNIX, DATE_ISO, DATE_DATETIME.
      'sql_type' => DATE_UNIX,
      // Timezone handling options: 'none', 'site', 'date', 'utc'.
      'tz_handling' => 'site',
      // Needed only for dates that use 'date' tz_handling.
      'timezone_field' => '',
      // Needed only for dates that use 'date' tz_handling.
      'offset_field' => '',
      // Array of "table.field" values for related fields that should be
      // loaded automatically in the Views SQL.
      'related_fields' => array(),
      // Granularity of this date field's db data.
      'granularity' => array('year', 'month', 'day', 'hour', 'minute', 'second'),
    );
  }
}
