<?php

function tzintellitime_mock_install() {
  drupal_install_schema('tzintellitime_mock');
}

function tzintellitime_mock_uninstall() {
  drupal_uninstall_schema('tzintellitime_mock');
}

function tzintellitime_mock_update_6000() {
  $ret = array();

  db_create_table($ret, 'tzintellitime_mock_users', array(
    'description' => 'Stores tzintellitime mock reports and assignments',
    'fields' => array(
      'user_id' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'Mock user ID',
      ),
      'login' => array(
        'type' => 'varchar',
        'length' => 20,
        'not null' => TRUE,
        'description' => 'The user login name',
      ),
      'password' => array(
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
        'description' => 'The mock-users password',
      ),
    ),
    'primary key' => array('user_id'),
  ));

  db_create_table($ret, 'tzintellitime_mock_data', array(
    'description' => 'Stores tzintellitime mock reports and assignments',
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'The object ID',
      ),
      'user_id' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The {tzintellitime_mock_users}.user_id',
      ),
      'data' => array(
        'type' => 'blob',
        'size' => 'normal',
        'not null' => TRUE,
        'description' => 'Serialized data',
      ),
    ),
    'primary key' => array('id'),
  ));

  return $ret;
}

function tzintellitime_mock_update_6001() {
  $ret = array();
  db_add_field($ret, 'tzintellitime_mock_users', 'fullname', array(
    'type' => 'varchar',
    'length' => 255,
    'description' => 'Users full name',
  ));
  return $ret;
}

function tzintellitime_mock_schema() {
  $schema['tzintellitime_mock_users'] = array(
    'description' => 'Stores tzintellitime mock reports and assignments',
    'fields' => array(
      'user_id' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'Mock user ID',
      ),
      'login' => array(
        'type' => 'varchar',
        'length' => 20,
        'not null' => TRUE,
        'description' => 'The user login name',
      ),
      'fullname' => array(
        'type' => 'varchar',
        'length' => 255,
        'description' => 'Users full name',
      ),
      'password' => array(
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
        'description' => 'The mock-users password',
      ),
    ),
    'primary key' => array('user_id'),
  );

  $schema['tzintellitime_mock_data'] = array(
    'description' => 'Stores tzintellitime mock reports and assignments',
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'The object ID',
      ),
      'user_id' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The {tzintellitime_mock_users}.user_id',
      ),
      'data' => array(
        'type' => 'blob',
        'size' => 'normal',
        'not null' => TRUE,
        'description' => 'Serialized data',
      ),
    ),
    'primary key' => array('id'),
  );
  return $schema;
}
