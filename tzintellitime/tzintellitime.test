<?php

/**
 * @file
 * TimeZynk intellitime integration tests.
 */

class TimeZynkIntellitimeTestCase extends DrupalWebTestCase {
  private $intelli_url = "http://my2.intelliplan.se/IntelliplanWeb/v2005/Portal/Login.aspx?Gw27UDttLdgps9TM4HqqoQ%3d%3d";
  private $login_view_state = "dDwyNDA3MjczMzc7dDw7bDxpPDA+Oz47bDx0PDtsPGk8MT47aTw1PjtpPDE1PjtpPDE5Pjs+O2w8dDw7bDxpPDA+Oz47bDx0PDtsPGk8MT47aTw3Pjs+O2w8dDxwPHA8bDxJbWFnZVVybDs+O2w8fi9DdXN0b21lcnMvaW50ZWxsaXBsYW5fbG9nby5naWY7Pj47Pjs7Pjt0PHA8cDxsPEltYWdlVXJsOz47bDx+L0ltYWdlcy9JbWdfSW50ZWxsaXBsYW5Mb2dvV2hpdGUuZ2lmOz4+Oz47Oz47Pj47Pj47dDxwPHA8bDxWaXNpYmxlOz47bDxvPGY+Oz4+Oz47Oz47dDxwPHA8bDxUZXh0Oz47bDxMb2dnYSBpbjs+Pjs+Ozs+O3Q8cDxwPGw8VGV4dDs+O2w8R2zDtm10IGzDtnNlbm9yZGV0Pzs+Pjs+Ozs+Oz4+Oz4+Oz5ngNWIe5WIW3O3prUuG7wbptC3jg==";

  public static function getInfo() {
    return array(
      'name' => 'TimeZynk intellitime test suite',
      'description' => '',
      'group' => 'TimeZynk',
    );
  }

  /**
   * setUp() performs any pre-requisite tasks that need to happen.
   */
  public function setUp() {
    // Enable any modules required for the test.
    parent::setUp('tzintellitime');
  }

  private function url($path = '') {
    $url = "http://localhost/user" . $path;
    return $url;
  }

  public function testInvalidLogin() {
    $curl_bean = tzintellitime_login($this->intelli_url, "monkey", "monkey");
    $this->assertFalse($curl_bean);
    tzintellitime_close($curl_bean);
  }

  public function testValidUsernameInvalidPass() {
    $curl_bean = tzintellitime_login($this->intelli_url, "Johan Heander", "monkey");
    $this->assertFalse($curl_bean);
    tzintellitime_close($curl_bean);
  }


  public function testValidLogin() {
    $curl_bean = tzintellitime_login($this->intelli_url, "Johan Heander", "0733623516");
    $this->assertTrue($curl_bean);
    tzintellitime_close($curl_bean);
  }

  public function testValidLoginGeneratesCookiejarAndCurlHandle() {
    $curl_bean = tzintellitime_login($this->intelli_url, "Johan Heander", "0733623516");
    $this->assertTrue($curl_bean);
    $this->assertNotNull($curl_bean->handle);
    $this->assertNotNull($curl_bean->cookiejar);
    tzintellitime_close($curl_bean);
  }


  public function testFetchingLocalUrl() {
    $handle = curl_init($this->url());
    $this->assertTrue(_tzintellitime_fetch_url($handle), "Should not be FALSE");
    curl_close($handle);
  }

  public function testFetchingInvalidUrl() {
    $handle = curl_init($this->url("/my_monkeys")); // If this exists, your server is upset..
    $this->assertFalse(_tzintellitime_fetch_url($handle), "Should be FALSE");
    curl_close($handle);
  }

  public function testLoadLoginPage() {
    $handle = curl_init($this->intelli_url);
    $doc = _tzintellitime_fetch_url($handle);
    $xpath = new DOMXPath($doc);
    $elements = $xpath->query("*/form");
    $this->assertNotNull($elements);
    $this->assertEqual(1, $elements->length);
    curl_close($handle);
  }

  public function testBuildLoginPost() {
    $mockdoc = new DOMDocument();
    $mockdoc->loadHTMLFile(dirname(__FILE__) . '/test/intellitime-login-page.html');
    $post = _tzintellitime_build_login_post($mockdoc, "monkeyname", "monkeypass");
    $this->assertEqual('Login.aspx?Gw27UDttLdgps9TM4HqqoQ%3d%3d', $post['action']);
    $this->assertEqual($this->login_view_state, $post['data']['__VIEWSTATE']);
    $this->assertEqual("monkeyname", $post['data']['TextBoxUserName']);
    $this->assertEqual("monkeypass", $post['data']['TextBoxPassword']);
    $this->assertEqual("Logga in", $post['data']['ButtonLogin']);
  }

  public function testBuildLoginPostUrl() {
    $login_url = "http://my2.intelliplan.se/IntelliplanWeb/v2005/(zercof5533snfaux0nedmt55)/Portal/Login.aspx?Gw27UDttLdgps9TM4HqqoQ%3d%3d";
    $post_action = "UNIQUE_STRING";
    $post_url = _tzintellitime_build_action_url($login_url, $post_action);
    $this->assertEqual("http://my2.intelliplan.se/IntelliplanWeb/v2005/(zercof5533snfaux0nedmt55)/Portal/UNIQUE_STRING", $post_url);
  }

  public function testLoginCheckerCatchesFailedLogin() {
    $filename = dirname(__FILE__) . '/test/intellitime-login-page.html';
    $handle = fopen($filename, "r");
    $contents = fread($handle, filesize($filename));
    fclose($handle);
    $this->assertFalse(_tzintellitime_is_valid_login($contents));
  }

  public function testLoginCheckerCatchesSuccessfulLogin() {
    $filename = dirname(__FILE__) . '/test/intellitime-main-page.html';
    $handle = fopen($filename, "r");
    $contents = fread($handle, filesize($filename));
    fclose($handle);
    $this->assertTrue(_tzintellitime_is_valid_login($contents));
  }


}